---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: neverpile
  namespace: neverpile-eureka
  labels:
    com.levigo.service: neverpile
    com.levigo.component: neverpile
spec:
  # remove replicas when using hpa
  serviceName: neverpile
  replicas: 4
  podManagementPolicy: Parallel #OrderedReady
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      com.levigo.service: neverpile
      com.levigo.component: neverpile
  template:
    metadata:
      labels:
        com.levigo.service: neverpile
        com.levigo.component: neverpile
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 120
#      serviceAccountName: neverpile
      #      securityContext:
      #        runAsUser: 5555
      #        fsGroup: 5555
      affinity:
        # if possible don't run two neverpile instances on the same host
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: com.levigo.component
                  operator: In
                  values:
                  - neverpile
              topologyKey: kubernetes.io/hostname # scope = node
      containers:
      - name: neverpile
        image: CD_IMAGE_NAME
#        image: registry.sol-01.k8s.levigo.net/neverpile-test-container:feature-LCP-136_k8s_deployment-0f72e1b0c9e65004b4656b7387de5bacb68e4ad8
        ports:
        - name: web
          containerPort: 8080
          protocol: TCP
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: CD_SPRING_PROFILES_ACTIVE
#          value: development
          # Elastic
        - name: neverpile-eureka.elastic.enabled
          value: "true"
        - name: spring.elasticsearch.rest.uris
          value: http://elasticsearch-service:9200
          # Cassandra
        - name: neverpile-eureka.cassandra.embedded
          value: "false"
        - name: neverpile-eureka.cassandra.enabled
          value: "false"
        - name: neverpile-eureka.cassandra.host
          value: cassandra
          # Ignite
        - name: neverpile-eureka.ignite.enabled
          value: "false"
          # Hazelcast
        - name: neverpile-eureka.hazelcast.enabled
          value: "true"
        - name: neverpile-eureka.hazelcast.configuration.group-config.password
          value: "8352843700000"
        - name: neverpile-eureka.hazelcast.configuration.network-config.join.tcp-ip-config.enabled
          value: "true"
        - name: neverpile-eureka.hazelcast.configuration.network-config.join.tcp-ip-config.members
          value: neverpile-0.neverpile,neverpile-1.neverpile,neverpile-2.neverpile
          # Admin
        - name: spring.application.name
          value: neverpile eureka (preprod k8s stack)
        - name: spring.boot.admin.client.url
          value: http://spring-boot-admin:1001
        - name: spring.boot.admin.client.username
          value: admin
        - name: spring.boot.admin.client.password
          value: admin
        resources:
          requests:
            memory: "2048Mi"
            cpu: "1000m"
            ephemeral-storage: "4096Mi"
          limits:
            memory: "2048Mi"
            cpu: "1000m"
            ephemeral-storage: "4096Mi"
        volumeMounts:
          - mountPath: /config
            name: config-file
            readOnly: true
      volumes:
        - name: config-file
          configMap:
            name: neverpile-config
        # ensure that traffic does not reach a container that is not ready
        #        readinessProbe:
        #          httpGet:
        #            path: /
        #            scheme: HTTP
        #            port: web
        #          initialDelaySeconds: 60
        #          periodSeconds: 20   #10=default
        #          timeoutSeconds: 2   # 1=default
        #          successThreshold: 2 # 1=default
        #          failureThreshold: 3 # 3=default
        # ensure that containers are restarted when they fail
#        livenessProbe:
#          httpGet:
#            path: /
#            scheme: HTTP
#            port: web
#          initialDelaySeconds: 65
#          periodSeconds: 5   #10=default
#          timeoutSeconds: 2   # 1=default
#          successThreshold: 1 # 1=default, must be 1
#          failureThreshold: 3 # 3=default
...
